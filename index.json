[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/RecurseDeeper.js",
    "content": "import assert from 'assert';\n\nimport StackEntry from './StackEntry.js';\nimport recurseDeeperStep from './recurseDeeperStep.js';\n\nexport default class RecurseDeeper {\n\t/**\n\t *\n\t * @param {Int8Array|Int16Array|Int32Array} B\n\t * @param {StackEntry[]} stack\n\t * @param {Function} eq\n\t */\n\tconstructor(B, stack, eq) {\n\t\tthis.B = B;\n\t\tthis._stack = stack;\n\t\tthis._eq = eq;\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {IteratorResult<number[]>}\n\t */\n\tnext() {\n\t\tif (this._stack.length === 0) return {done: true, value: undefined};\n\t\tassert(this._stack[this._stack.length - 1] instanceof StackEntry);\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: recurseDeeperStep(this.B, this._stack, this._eq),\n\t\t};\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/RecurseDeeper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "RecurseDeeper",
    "memberof": "src/RecurseDeeper.js",
    "static": true,
    "longname": "src/RecurseDeeper.js~RecurseDeeper",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/RecurseDeeper.js",
    "importStyle": "RecurseDeeper",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/RecurseDeeper.js~RecurseDeeper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/RecurseDeeper.js~RecurseDeeper#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Int8Array",
          "Int16Array",
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "B",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "StackEntry[]"
        ],
        "spread": false,
        "optional": false,
        "name": "stack",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "B",
    "memberof": "src/RecurseDeeper.js~RecurseDeeper",
    "static": false,
    "longname": "src/RecurseDeeper.js~RecurseDeeper#B",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "_stack",
    "memberof": "src/RecurseDeeper.js~RecurseDeeper",
    "static": false,
    "longname": "src/RecurseDeeper.js~RecurseDeeper#_stack",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "_eq",
    "memberof": "src/RecurseDeeper.js~RecurseDeeper",
    "static": false,
    "longname": "src/RecurseDeeper.js~RecurseDeeper#_eq",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/RecurseDeeper.js~RecurseDeeper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/RecurseDeeper.js~RecurseDeeper#[Symbol.iterator]",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "next",
    "memberof": "src/RecurseDeeper.js~RecurseDeeper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/RecurseDeeper.js~RecurseDeeper#next",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "return": {
      "nullable": null,
      "types": [
        "IteratorResult<number[]>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/Split.js",
    "content": "/**\n * Split.\n *\n * @param {number} k\n * @param {number} xBegin\n * @param {number} xEnd\n * @param {number} distanceLeft\n * @param {number} distance\n */\nexport default function Split(k, xBegin, xEnd, distanceLeft, distance) {\n\tthis.k = k;\n\tthis.xBegin = xBegin;\n\tthis.xEnd = xEnd;\n\tthis.distanceLeft = distanceLeft;\n\tthis.distance = distance;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/Split.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "Split",
    "memberof": "src/Split.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Split.js~Split",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/Split.js",
    "importStyle": "Split",
    "description": "Split.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "k",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "xBegin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "xEnd",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "distanceLeft",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "distance",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/StackEntry.js",
    "content": "/**\n * StackEntry.\n *\n * @param {number} D\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n */\nexport default function StackEntry(D, li, lj, ri, rj) {\n\tthis.D = D;\n\tthis.li = li;\n\tthis.lj = lj;\n\tthis.ri = ri;\n\tthis.rj = rj;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/StackEntry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "StackEntry",
    "memberof": "src/StackEntry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/StackEntry.js~StackEntry",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/StackEntry.js",
    "importStyle": "StackEntry",
    "description": "StackEntry.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "D",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/arrayAlloc.js",
    "content": "import arrayType from './arrayType.js';\n\n/**\n * ArrayAlloc.\n *\n * @param {number} maxValue\n * @param {number} length\n * @return {Int8Array|Int16Array|Int32Array}\n */\nexport default function arrayAlloc(maxValue, length) {\n\tconst TypedArray = arrayType(maxValue);\n\treturn new TypedArray(length);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/arrayAlloc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "arrayAlloc",
    "memberof": "src/arrayAlloc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/arrayAlloc.js~arrayAlloc",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/arrayAlloc.js",
    "importStyle": "arrayAlloc",
    "description": "ArrayAlloc.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxValue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Int8Array",
        "Int16Array",
        "Int32Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/arrayRealloc.js",
    "content": "import assert from 'assert';\n// Import arrayType from './arrayType.js';\n\n/**\n * ArrayRealloc.\n *\n * @param {number} maxValue\n * @param {Int8Array|Int16Array|Int32Array} B\n * @return {Int8Array|Int16Array|Int32Array}\n */\nexport default function arrayRealloc(maxValue, B) {\n\tassert(maxValue < 2 ** (B.BYTES_PER_ELEMENT * 8));\n\treturn B;\n\t// Const TypedArray = arrayType(maxValue);\n\t// return B.constructor === TypedArray\n\t// ? B\n\t// : new TypedArray(B.buffer, B.byteOffset);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/arrayRealloc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "arrayRealloc",
    "memberof": "src/arrayRealloc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/arrayRealloc.js~arrayRealloc",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/arrayRealloc.js",
    "importStyle": "arrayRealloc",
    "description": "ArrayRealloc.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxValue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Int8Array",
          "Int16Array",
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "B",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Int8Array",
        "Int16Array",
        "Int32Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/arrayType.js",
    "content": "import assert from 'assert';\n\n/**\n * ArrayType.\n *\n * @param {number} maxValue\n * @return {Int8ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor}\n */\nexport default function arrayType(maxValue) {\n\t// If (maxValue < 2**7) return Int8Array;\n\t// if (maxValue < 2**15) return Int16Array;\n\tassert(maxValue < 2 ** 31);\n\treturn Int32Array;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/arrayType.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "arrayType",
    "memberof": "src/arrayType.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/arrayType.js~arrayType",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/arrayType.js",
    "importStyle": "arrayType",
    "description": "ArrayType.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxValue",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Int8ArrayConstructor",
        "Int16ArrayConstructor",
        "Int32ArrayConstructor"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/backwardExtend.js",
    "content": "import assert from 'assert';\n\nimport longestCommonSuffix from './longestCommonSuffix.js';\n/**\n * Diagonal backward extension subroutine.\n *\n * @param {number} cMin\n * @param {number} cMax\n * @param {number} cx\n * @param {{[x: number]: number}} V\n * @param {Function} eq\n * @param {number} lj\n * @param {number} rj\n */\nexport default function backwardExtend(\n\tcMin,\n\tcMax,\n\tcx,\n\tV,\n\teq,\n\t// Li,\n\tlj,\n\t// Ri,\n\trj,\n) {\n\tfor (let c = cMin; c <= cMax; c = (c + 2) | 0) {\n\t\tconst x = V[c];\n\t\tconst y = x - (c - cx);\n\t\tassert(x === lj - 2 || x === lj - 1 || x >= lj); // These should be true\n\t\tassert(y === rj - 2 || y === rj - 1 || y >= rj); // Provided you called\n\t\t// assert(x <= li); // BackwardStep(center, D, ...)\n\t\t// assert(y <= ri); // Just before.\n\t\tV[c] = longestCommonSuffix(eq, V[c], lj, (V[c] - ((c - cx) | 0)) | 0, rj);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/backwardExtend.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "backwardExtend",
    "memberof": "src/backwardExtend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/backwardExtend.js~backwardExtend",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/backwardExtend.js",
    "importStyle": "backwardExtend",
    "description": "Diagonal backward extension subroutine.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMax",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{[x: number]: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "V",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/backwardStep.js",
    "content": "/**\n * Diagonal backward step.\n *\n * @param {{[x: number]: number}} V\n * @param {number} cMin\n * @param {number} cMax\n * @param {number} cmD\n */\nexport default function backwardStep(V, cMin, cMax, cmD) {\n\tV[cMin] =\n\t\tcMin === cmD\n\t\t\t? (V[(cMin + 1) | 0] - 1) | 0\n\t\t\t: Math.min(V[(cMin - 1) | 0], (V[(cMin + 1) | 0] - 1) | 0);\n\n\tfor (let c = (cMin + 2) | 0; c < cMax; c = (c + 2) | 0) {\n\t\tV[c] = Math.min(V[(c - 1) | 0], (V[(c + 1) | 0] - 1) | 0);\n\t}\n\n\tif (cMin !== cMax) {\n\t\t// Assert(UB === D || V[cMax + 1] > V[cMax - 1]); // UB === D || xp > yp\n\t\tV[cMax] = V[(cMax - 1) | 0];\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/backwardStep.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "backwardStep",
    "memberof": "src/backwardStep.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/backwardStep.js~backwardStep",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/backwardStep.js",
    "importStyle": "backwardStep",
    "description": "Diagonal backward step.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "{[x: number]: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "V",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMax",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cmD",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/boundAlloc.js",
    "content": "import assert from 'assert';\n\n/**\n * BoundAlloc.\n *\n * @param {number} MAX\n * @param {number} li\n * @param {number} lj\n * @return {number}\n */\nexport default function boundAlloc(MAX, li, lj) {\n\tassert(lj > li);\n\treturn Math.min(MAX, (lj - li) | 0);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/boundAlloc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "boundAlloc",
    "memberof": "src/boundAlloc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/boundAlloc.js~boundAlloc",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/boundAlloc.js",
    "importStyle": "boundAlloc",
    "description": "BoundAlloc.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/defaultTest.js",
    "content": "/**\n * DefaultTest.\n *\n * @param {any} x\n * @param {any} y\n * @return {boolean}\n */\nexport default function defaultTest(x, y) {\n\treturn x === y;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/defaultTest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "defaultTest",
    "memberof": "src/defaultTest.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/defaultTest.js~defaultTest",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/defaultTest.js",
    "importStyle": "defaultTest",
    "description": "DefaultTest.",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/diff.js",
    "content": "import validate32 from './validate32.js';\nimport diff32 from './diff32.js';\n\n/**\n * Yields diff rectangles. Throws if indices are not int32.\n *\n * @param {number} MAX\n * @param {Function} eq\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n * @return {IterableIterator}\n */\nexport default function diff(MAX, eq, li, lj, ri, rj) {\n\tvalidate32(MAX, li, lj, ri, rj);\n\treturn diff32(MAX | 0, eq, li | 0, lj | 0, ri | 0, rj | 0);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/diff.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "diff",
    "memberof": "src/diff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/diff.js~diff",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/diff.js",
    "importStyle": "diff",
    "description": "Yields diff rectangles. Throws if indices are not int32.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/diff32.js",
    "content": "import assert from 'assert';\n\nimport {ValueError} from '@failure-abstraction/error';\n\nimport longestCommonPrefix from './longestCommonPrefix.js';\nimport longestCommonSuffix from './longestCommonSuffix.js';\n\nimport recurse from './recurse.js';\nimport recurseDeep from './recurseDeep.js';\n\n/**\n * Yields diff rectangles.\n * Undefined behavior if indices are not int32.\n *\n * @param {number} MAX\n * @param {Function} eq\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n * @return {IterableIterator}\n */\nexport default function diff32(MAX, eq, li, lj, ri, rj) {\n\tassert(Number.isInteger(MAX) && MAX >= -2147483648 && MAX <= 2147483647);\n\tassert(Number.isInteger(li) && li >= -2147483648 && li <= 2147483647);\n\tassert(Number.isInteger(lj) && lj >= -2147483648 && lj <= 2147483647);\n\tassert(Number.isInteger(ri) && ri >= -2147483648 && ri <= 2147483647);\n\tassert(Number.isInteger(rj) && rj >= -2147483648 && rj <= 2147483647);\n\tconst N = (lj - li) | 0;\n\tconst M = (rj - ri) | 0;\n\tassert(MAX <= N + M);\n\n\tif (MAX < 0) throw new ValueError();\n\n\tif (MAX === 0 && N !== M) throw new ValueError();\n\n\tconst l0 = longestCommonPrefix(eq, li, lj, ri, rj);\n\n\tif (l0 === lj && N === M) return [][Symbol.iterator]();\n\n\tif (MAX === 0) throw new ValueError();\n\n\tconst r0 = (ri + ((l0 - li) | 0)) | 0;\n\tconst l1 = longestCommonSuffix(eq, lj, l0, rj, r0);\n\tconst r1 = (rj - ((lj - l1) | 0)) | 0;\n\n\tassert(l0 < l1 || r0 < r1);\n\n\treturn MAX < ((((l1 - l0) | 0) + ((r1 - r0) | 0)) | 0)\n\t\t? recurse(MAX, eq, l0, l1, r0, r1)\n\t\t: recurseDeep((((l1 - l0) | 0) + ((r1 - r0) | 0)) | 0, eq, l0, l1, r0, r1);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/diff32.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "diff32",
    "memberof": "src/diff32.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/diff32.js~diff32",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/diff32.js",
    "importStyle": "diff32",
    "description": "Yields diff rectangles.\nUndefined behavior if indices are not int32.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/forwardExtend.js",
    "content": "import longestCommonPrefix from './longestCommonPrefix.js';\n\n/**\n * Diagonal forward extension subroutine.\n *\n * @param {number} cMin\n * @param {number} cMax\n * @param {number} cx\n * @param {{[x: number]: number}} V\n * @param {Function} eq\n * @param {number} lj\n * @param {number} rj\n */\nexport default function forwardExtend(cMin, cMax, cx, V, eq, lj, rj) {\n\tfor (let c = cMin; c <= cMax; c = (c + 2) | 0) {\n\t\tV[c] = longestCommonPrefix(eq, V[c], lj, (V[c] - ((c - cx) | 0)) | 0, rj);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/forwardExtend.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "forwardExtend",
    "memberof": "src/forwardExtend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/forwardExtend.js~forwardExtend",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/forwardExtend.js",
    "importStyle": "forwardExtend",
    "description": "Diagonal forward extension subroutine.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMax",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{[x: number]: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "V",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/forwardStep.js",
    "content": "/**\n * Diagonal forward step.\n *\n * @param {{[x: number]: number}} V\n * @param {number} cMin\n * @param {number} cMax\n * @param {number} cpD\n */\nexport default function forwardStep(V, cMin, cMax, cpD) {\n\t// Assert(ri < rj && li < lj);\n\t// assert(LB <= UB);\n\t// assert(LB !== D);\n\t// assert(UB !== -D);\n\n\t// const yp = V[cMin + 1];\n\t// assert(LB === -D || V[cMin - 1] < V[cMin + 1]); // LB === -D || xp < yp\n\t// const x = yp;\n\t// Const y = x - (k + Delta);\n\n\t// assert(x <= lj); // Always true\n\t// Assert(y <= rj); // False sometimes\n\t// assert(x >= li); // Always true\n\t// assert(y >= ri); // Always true\n\tV[cMin] = V[(cMin + 1) | 0];\n\n\tfor (let c = (cMin + 2) | 0; c < cMax; c = (c + 2) | 0) {\n\t\t// Assert(c - center !== -D && c - center !== D);\n\n\t\t// Assert(x <= lj); // False sometimes\n\t\t// assert(y <= rj); // False sometimes\n\t\t// assert(x >= li); // Always true\n\t\t// assert(y >= ri); // Always true\n\t\tV[c] = Math.max(V[(c + 1) | 0], (V[(c - 1) | 0] + 1) | 0);\n\t}\n\n\tif (cMin !== cMax) {\n\t\t// Assert(UB !== LB);\n\n\t\t// Assert(x <= lj); // False sometimes\n\t\t// assert(y <= rj); // Always true\n\t\t// assert(x >= li); // Always true\n\t\t// assert(y >= ri); // Always true\n\t\tV[cMax] =\n\t\t\tcMax === cpD\n\t\t\t\t? (V[(cMax - 1) | 0] + 1) | 0\n\t\t\t\t: Math.max(V[(cMax + 1) | 0], (V[(cMax - 1) | 0] + 1) | 0);\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/forwardStep.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "forwardStep",
    "memberof": "src/forwardStep.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/forwardStep.js~forwardStep",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/forwardStep.js",
    "importStyle": "forwardStep",
    "description": "Diagonal forward step.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "{[x: number]: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "V",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cMax",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cpD",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/index.js",
    "content": "export {default as RecurseDeeper} from './RecurseDeeper.js';\nexport {default as Split} from './Split.js';\nexport {default as StackEntry} from './StackEntry.js';\nexport {default as arrayAlloc} from './arrayAlloc.js';\nexport {default as arrayRealloc} from './arrayRealloc.js';\nexport {default as arrayType} from './arrayType.js';\nexport {default as backwardExtend} from './backwardExtend.js';\nexport {default as backwardStep} from './backwardStep.js';\nexport {default as boundAlloc} from './boundAlloc.js';\nexport {default as defaultTest} from './defaultTest.js';\nexport {default as diff} from './diff.js';\nexport {default as diff32} from './diff32.js';\nexport {default as forwardExtend} from './forwardExtend.js';\nexport {default as forwardStep} from './forwardStep.js';\nexport {default as lBound} from './lBound.js';\nexport {default as longestCommonPrefix} from './longestCommonPrefix.js';\nexport {default as longestCommonSuffix} from './longestCommonSuffix.js';\nexport {default as makeEqualityFn} from './makeEqualityFn.js';\nexport {default as makeScan} from './makeScan.js';\nexport {default as oneWay} from './oneWay.js';\nexport {default as oneWayAlloc} from './oneWayAlloc.js';\nexport {default as recurse} from './recurse.js';\nexport {default as recurseDeep} from './recurseDeep.js';\nexport {default as recurseDeeperStep} from './recurseDeeperStep.js';\nexport {default as twoWay} from './twoWay.js';\nexport {default as twoWayAlloc} from './twoWayAlloc.js';\nexport {default as twoWayRealloc} from './twoWayRealloc.js';\nexport {default as twoWayScan} from './twoWayScan.js';\nexport {default as uBound} from './uBound.js';\nexport {default as validate32} from './validate32.js';\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/lBound.js",
    "content": "import assert from 'assert';\n\n/**\n * Computes a lower bound for the signed distance.\n *\n * @param {number} D >= 1\n * @param {number} N >= 1\n * @return {number} A number -N <= k < D.\n */\nexport default function lBound(D, N) {\n\tassert(N >= 1);\n\tassert(D >= 1);\n\tconst k = D <= N ? -D | 0 : (D - (N << 1)) | 0;\n\tassert(k >= -N);\n\tassert(k < D);\n\tassert((D & 1) === (k & 1));\n\treturn k;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/lBound.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "lBound",
    "memberof": "src/lBound.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lBound.js~lBound",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/lBound.js",
    "importStyle": "lBound",
    "description": "Computes a lower bound for the signed distance.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "D",
        "description": ">= 1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "N",
        "description": ">= 1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A number -N <= k < D."
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/longestCommonPrefix.js",
    "content": "import assert from 'assert';\n\n/**\n * LongestCommonPrefix.\n *\n * @param {Function} eq\n * @param {number} ai\n * @param {number} aj\n * @param {number} bi\n * @param {number} bj\n */\nexport default function longestCommonPrefix(eq, ai, aj, bi, bj) {\n\tassert(Number.isInteger(ai) && ai >= 0);\n\tassert(Number.isInteger(aj));\n\tassert(Number.isInteger(bi) && bi >= 0);\n\tassert(Number.isInteger(bj));\n\t// Assert(ai <= aj && bi <= bj); // Broken to avoid branchy hot-loops\n\tif (((aj - ai) | 0) <= ((bj - bi) | 0)) {\n\t\twhile (ai < aj && eq(ai, bi)) {\n\t\t\tai = (ai + 1) | 0;\n\t\t\tbi = (bi + 1) | 0;\n\t\t}\n\t} else {\n\t\twhile (bi < bj && eq(ai, bi)) {\n\t\t\tai = (ai + 1) | 0;\n\t\t\tbi = (bi + 1) | 0;\n\t\t}\n\t}\n\n\treturn ai;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/longestCommonPrefix.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "longestCommonPrefix",
    "memberof": "src/longestCommonPrefix.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/longestCommonPrefix.js~longestCommonPrefix",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/longestCommonPrefix.js",
    "importStyle": "longestCommonPrefix",
    "description": "LongestCommonPrefix.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/longestCommonSuffix.js",
    "content": "import assert from 'assert';\n\n/**\n * LongestCommonSuffix.\n *\n * @param {Function} eq\n * @param {number} aj\n * @param {number} ai\n * @param {number} bj\n * @param {number} bi\n */\nexport default function longestCommonSuffix(eq, aj, ai, bj, bi) {\n\tassert(Number.isInteger(aj));\n\tassert(Number.isInteger(ai) && ai >= 0);\n\tassert(Number.isInteger(bj));\n\tassert(Number.isInteger(bi) && bi >= 0);\n\t// Assert(ai <= aj && bi <= bj); Broken to avoid branchy hot-loops\n\tif (((aj - ai) | 0) <= ((bj - bi) | 0)) {\n\t\twhile (ai < aj && eq((aj - 1) | 0, (bj - 1) | 0)) {\n\t\t\taj = (aj - 1) | 0;\n\t\t\tbj = (bj - 1) | 0;\n\t\t}\n\t} else {\n\t\twhile (bi < bj && eq((aj - 1) | 0, (bj - 1) | 0)) {\n\t\t\taj = (aj - 1) | 0;\n\t\t\tbj = (bj - 1) | 0;\n\t\t}\n\t}\n\n\treturn aj;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/longestCommonSuffix.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "longestCommonSuffix",
    "memberof": "src/longestCommonSuffix.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/longestCommonSuffix.js~longestCommonSuffix",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/longestCommonSuffix.js",
    "importStyle": "longestCommonSuffix",
    "description": "LongestCommonSuffix.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "aj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ai",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bi",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/makeEqualityFn.js",
    "content": "import assert from 'assert';\n\n/**\n * MakeEqualityFn.\n *\n * @param {Function} test\n * @param {ArrayLike} left\n * @param {ArrayLike} right\n */\nexport default function makeEqualityFn(test, left, right) {\n\t/**\n\t * Eq.\n\t *\n\t * @param {number} i\n\t * @param {number} j\n\t * @return {boolean}\n\t */\n\tconst eq = (i, j) => {\n\t\tassert(i >= 0 && i < left.length);\n\t\tassert(j >= 0 && j < right.length);\n\t\treturn test(left[i], right[j]);\n\t};\n\n\treturn eq;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/makeEqualityFn.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "makeEqualityFn",
    "memberof": "src/makeEqualityFn.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/makeEqualityFn.js~makeEqualityFn",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/makeEqualityFn.js",
    "importStyle": "makeEqualityFn",
    "description": "MakeEqualityFn.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "test",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ArrayLike"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ArrayLike"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/makeScan.js",
    "content": "import assert from 'assert';\n\nimport longestCommonPrefix from './longestCommonPrefix.js';\nimport longestCommonSuffix from './longestCommonSuffix.js';\nimport validate32 from './validate32.js';\n\n/**\n * MakeScan.\n *\n * @param {Function} method\n * @return {Function}\n */\nexport default function makeScan(method) {\n\t/**\n\t * Returns distance, or -1 if distance > MAX.\n\t * Undefined behavior if indices are not int32.\n\t *\n\t * @param {number} MAX\n\t * @param {Function} eq\n\t * @param {number} li\n\t * @param {number} lj\n\t * @param {number} ri\n\t * @param {number} rj\n\t * @return {number}\n\t */\n\tconst scan32 = (MAX, eq, li, lj, ri, rj) => {\n\t\tassert(Number.isInteger(MAX));\n\t\tconst N = (lj - li) | 0;\n\t\tconst M = (rj - ri) | 0;\n\t\tassert(MAX <= N + M);\n\n\t\tif (MAX < 0) return -1;\n\t\tif (MAX === 0 && N !== M) return -1;\n\n\t\tconst l0 = longestCommonPrefix(eq, li, lj, ri, rj);\n\n\t\tif (l0 === lj && N === M) return 0;\n\n\t\tif (MAX === 0) return -1;\n\n\t\tconst r0 = (ri + ((l0 - li) | 0)) | 0;\n\t\tconst l1 = longestCommonSuffix(eq, lj, l0, rj, r0);\n\t\tconst r1 = (rj - ((lj - l1) | 0)) | 0;\n\n\t\tconst halfPerimeter = (((l1 - l0) | 0) + ((r1 - r0) | 0)) | 0;\n\n\t\treturn halfPerimeter <= MAX\n\t\t\t? l0 === l1 || r0 === r1\n\t\t\t\t? halfPerimeter\n\t\t\t\t: method(halfPerimeter, eq, l0, l1, r0, r1).distance\n\t\t\t: l0 === l1 || r0 === r1\n\t\t\t? -1\n\t\t\t: method(MAX, eq, l0, l1, r0, r1).distance;\n\t};\n\n\t/**\n\t * Returns distance, or -1 if distance > MAX.\n\t * Throws if indices are not int32.\n\t *\n\t * @param {number} MAX\n\t * @param {Function} eq\n\t * @param {number} li\n\t * @param {number} lj\n\t * @param {number} ri\n\t * @param {number} rj\n\t * @return {number}\n\t */\n\tconst scan = (MAX, eq, li, lj, ri, rj) => {\n\t\tvalidate32(MAX, li, lj, ri, rj);\n\t\treturn scan32(MAX | 0, eq, li | 0, lj | 0, ri | 0, rj | 0);\n\t};\n\n\treturn scan;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/makeScan.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "makeScan",
    "memberof": "src/makeScan.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/makeScan.js~makeScan",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/makeScan.js",
    "importStyle": "makeScan",
    "description": "MakeScan.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/oneWay.js",
    "content": "import assert from 'assert';\n\nimport oneWayAlloc from './oneWayAlloc.js';\nimport forwardStep from './forwardStep.js';\nimport lBound from './lBound.js';\nimport uBound from './uBound.js';\nimport longestCommonPrefix from './longestCommonPrefix.js';\nimport Split from './Split.js';\n\n/**\n * Scan from begin to end.\n *\n * @param {number} MAX\n * @param {Function} eq\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n * @return {Split}\n */\nexport default function oneWay(MAX, eq, li, lj, ri, rj) {\n\tassert(MAX > 0);\n\tassert(MAX <= lj - li + rj - ri);\n\tassert(li < lj);\n\tassert(ri < rj);\n\tassert(!eq(li, ri));\n\tassert(!eq(lj - 1, rj - 1));\n\n\tconst {array: V, center} = oneWayAlloc(MAX, li, lj, ri, rj, li);\n\n\tconst Delta0 = (li - ri) | 0;\n\tfor (let D = 1; D <= MAX; D = (D + 1) | 0) {\n\t\tconst LB = lBound(D, (rj - ri) | 0);\n\t\tconst UB = uBound(D, (lj - li) | 0);\n\t\tassert(LB <= UB);\n\t\tassert(LB !== D);\n\t\tassert(UB !== -D);\n\t\tforwardStep(V, (center + LB) | 0, (center + UB) | 0, (center + D) | 0);\n\t\tfor (let k = LB; k <= UB; k = (k + 2) | 0) {\n\t\t\tconst x_ = V[(center + k) | 0];\n\t\t\tconst y_ = (x_ - ((k + Delta0) | 0)) | 0;\n\t\t\tconst x = longestCommonPrefix(eq, x_, lj, y_, rj);\n\t\t\tconst y = (x - ((k + Delta0) | 0)) | 0;\n\t\t\tif (x === lj && y === rj) return new Split(-1, -1, -1, -1, D);\n\t\t\tV[(center + k) | 0] = x;\n\t\t}\n\t}\n\n\treturn new Split(-1, -1, -1, -1, -1);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/oneWay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "oneWay",
    "memberof": "src/oneWay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/oneWay.js~oneWay",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/oneWay.js",
    "importStyle": "oneWay",
    "description": "Scan from begin to end.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Split"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "src/oneWayAlloc.js",
    "content": "import assert from 'assert';\n\nimport boundAlloc from './boundAlloc.js';\nimport arrayAlloc from './arrayAlloc.js';\n\n/**\n * DiagonalAlloc.\n *\n * @param {number} MAX\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n * @param {number} init\n */\nexport default function oneWayAlloc(MAX, li, lj, ri, rj, init) {\n\tconst lMAX = boundAlloc(MAX, li, lj);\n\tconst rMAX = boundAlloc(MAX, ri, rj);\n\tassert(rMAX + 1 < rMAX + 1 + lMAX);\n\treturn {\n\t\tarray: arrayAlloc(lj, (((rMAX + 1) | 0) + lMAX) | 0).fill(init),\n\t\tcenter: rMAX,\n\t};\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/oneWayAlloc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "oneWayAlloc",
    "memberof": "src/oneWayAlloc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/oneWayAlloc.js~oneWayAlloc",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/oneWayAlloc.js",
    "importStyle": "oneWayAlloc",
    "description": "DiagonalAlloc.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "init",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"array\": *, \"center\": *}"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/recurse.js",
    "content": "import assert from 'assert';\n\nimport {ValueError} from '@failure-abstraction/error';\n\nimport twoWayAlloc from './twoWayAlloc.js';\nimport twoWayScan from './twoWayScan.js';\n\nimport RecurseDeeper from './RecurseDeeper.js';\nimport StackEntry from './StackEntry.js';\n\n/**\n * Recurse.\n *\n * @param {number} MAX\n * @param {Function} eq\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n * @return {IterableIterator}\n */\nexport default function recurse(MAX, eq, li, lj, ri, rj) {\n\tassert(MAX >= 0);\n\tassert(lj - li + rj - ri > MAX);\n\tif (li === lj || ri === rj) {\n\t\tassert(lj - li > MAX || rj - ri > MAX);\n\t\tthrow new ValueError();\n\t}\n\n\tassert(li < lj);\n\tassert(ri < rj);\n\tassert(!eq(li, ri));\n\tassert(!eq(lj - 1, rj - 1));\n\n\tconst {V, centerF, centerB} = twoWayAlloc(MAX, li, lj, ri, rj);\n\n\tconst split = twoWayScan(MAX, V, centerF, centerB, eq, li, lj, ri, rj);\n\n\tconst k = split.k;\n\tconst xBegin = split.xBegin;\n\tconst xEnd = split.xEnd;\n\tconst distanceLeft = split.distanceLeft;\n\tconst distance = split.distance;\n\tconst distanceRight = (distance - distanceLeft) | 0;\n\n\tconsole.debug({k, xBegin, xEnd, distance});\n\n\tif (distance === -1) throw new ValueError();\n\n\tassert(distance > 0);\n\tconst maxDistance =\n\t\t(((lj - li) | 0) + ((((rj - ri) | 0) - ((xEnd - xBegin) << 1)) | 0)) | 0;\n\tif (distance === maxDistance) {\n\t\t// Early exit when there is no match in the recursive calls\n\t\tassert(xBegin < xEnd);\n\t\treturn [\n\t\t\t[li, xBegin, ri, (xBegin - k) | 0],\n\t\t\t[xEnd, lj, (xEnd - k) | 0, rj],\n\t\t][Symbol.iterator]();\n\t}\n\n\tassert(distance < maxDistance);\n\treturn new RecurseDeeper(\n\t\tV,\n\t\t[\n\t\t\tnew StackEntry(distanceRight, xEnd, lj, (xEnd - k) | 0, rj),\n\t\t\tnew StackEntry(distanceLeft, li, xBegin, ri, (xBegin - k) | 0),\n\t\t],\n\t\teq,\n\t);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/recurse.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "recurse",
    "memberof": "src/recurse.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/recurse.js~recurse",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/recurse.js",
    "importStyle": "recurse",
    "description": "Recurse.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/recurseDeep.js",
    "content": "import assert from 'assert';\n\nimport twoWayAlloc from './twoWayAlloc.js';\nimport twoWayScan from './twoWayScan.js';\n\nimport RecurseDeeper from './RecurseDeeper.js';\nimport StackEntry from './StackEntry.js';\n\n/**\n * RecurseDeep.\n *\n * @param {number} MAX\n * @param {Function} eq\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n * @return {IterableIterator}\n */\nexport default function recurseDeep(MAX, eq, li, lj, ri, rj) {\n\tassert(MAX >= 1);\n\tassert(lj - li + rj - ri >= MAX);\n\tif (li === lj || ri === rj) {\n\t\tassert(li < lj || ri < rj);\n\t\tassert(lj - li <= MAX && rj - ri <= MAX);\n\t\treturn [[li, lj, ri, rj]][Symbol.iterator]();\n\t}\n\n\tassert(li < lj);\n\tassert(ri < rj);\n\tassert(!eq(li, ri));\n\tassert(!eq(lj - 1, rj - 1));\n\n\tconst {V, centerF, centerB} = twoWayAlloc(MAX, li, lj, ri, rj);\n\n\tconst split = twoWayScan(MAX, V, centerF, centerB, eq, li, lj, ri, rj);\n\n\tconst k = split.k;\n\tconst xBegin = split.xBegin;\n\tconst xEnd = split.xEnd;\n\tconst distanceLeft = split.distanceLeft;\n\tconst distance = split.distance;\n\tconst distanceRight = (distance - distanceLeft) | 0;\n\n\tconsole.debug({k, xBegin, xEnd, distance});\n\n\tassert(distance > 0);\n\tconst maxDistance =\n\t\t(((lj - li) | 0) + ((((rj - ri) | 0) - ((xEnd - xBegin) << 1)) | 0)) | 0;\n\tif (distance === maxDistance) {\n\t\t// Early exit when there is no match in the recursive calls\n\t\tif (xBegin === xEnd) {\n\t\t\treturn [[li, lj, ri, rj]][Symbol.iterator]();\n\t\t}\n\n\t\treturn [\n\t\t\t[li, xBegin, ri, (xBegin - k) | 0],\n\t\t\t[xEnd, lj, (xEnd - k) | 0, rj],\n\t\t][Symbol.iterator]();\n\t}\n\n\tassert(distance < maxDistance);\n\treturn new RecurseDeeper(\n\t\tV,\n\t\t[\n\t\t\tnew StackEntry(distanceRight, xEnd, lj, (xEnd - k) | 0, rj),\n\t\t\tnew StackEntry(distanceLeft, li, xBegin, ri, (xBegin - k) | 0),\n\t\t],\n\t\teq,\n\t);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/recurseDeep.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "recurseDeep",
    "memberof": "src/recurseDeep.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/recurseDeep.js~recurseDeep",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/recurseDeep.js",
    "importStyle": "recurseDeep",
    "description": "RecurseDeep.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/recurseDeeperStep.js",
    "content": "import assert from 'assert';\n\nimport StackEntry from './StackEntry.js';\nimport twoWayRealloc from './twoWayRealloc.js';\nimport twoWayScan from './twoWayScan.js';\n\n/**\n * RecurseDeeper.\n *\n * /!\\ The entries in this stack should have a value D = MAX that is exactly\n * the distance on the input range [li, lj, ri, rj].\n *\n * @param {Int8Array|Int16Array|Int32Array} B\n * @param {StackEntry[]} stack\n * @param {Function} eq\n * @return {number[]}\n */\nexport default function recurseDeeperStep(B, stack, eq) {\n\tassert(stack.length > 0);\n\tconst entry = stack.pop();\n\tassert(entry instanceof StackEntry);\n\tlet MAX = entry.D;\n\tconst li = entry.li;\n\tlet lj = entry.lj;\n\tconst ri = entry.ri;\n\tlet rj = entry.rj;\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tassert(MAX >= 1);\n\t\tconst halfPerimeter = (((lj - li) | 0) + ((rj - ri) | 0)) | 0;\n\t\tassert(halfPerimeter >= MAX);\n\t\tif (halfPerimeter === MAX) {\n\t\t\tassert(li < lj || ri < rj);\n\t\t\tassert(lj - li <= MAX && rj - ri <= MAX);\n\t\t\treturn [li, lj, ri, rj];\n\t\t}\n\n\t\tassert(halfPerimeter > MAX);\n\t\tassert(li < lj);\n\t\tassert(ri < rj);\n\t\tassert(!eq(li, ri));\n\t\tassert(!eq(lj - 1, rj - 1));\n\n\t\tconst {V, centerF, centerB} = twoWayRealloc(B, MAX, li, lj, ri, rj);\n\n\t\tconst split = twoWayScan(MAX, V, centerF, centerB, eq, li, lj, ri, rj);\n\n\t\tconst k = split.k;\n\t\tconst xBegin = split.xBegin;\n\t\tconst xEnd = split.xEnd;\n\t\tconst distanceLeft = split.distanceLeft;\n\t\tconst distance = split.distance;\n\t\tassert(distance === MAX);\n\t\tconst distanceRight = (MAX - distanceLeft) | 0;\n\n\t\tconsole.debug({k, xBegin, xEnd, distance});\n\n\t\tconst maxDistance = (halfPerimeter - ((xEnd - xBegin) << 1)) | 0;\n\t\tassert(distance <= maxDistance);\n\t\tassert(distance < maxDistance || xBegin < xEnd);\n\t\t// We push the right side of the recursion tree on the stack\n\t\tstack.push(new StackEntry(distanceRight, xEnd, lj, (xEnd - k) | 0, rj));\n\t\t// Explicit tail recursion on the left side of the recursion tree\n\t\tMAX = distanceLeft;\n\t\tlj = xBegin;\n\t\trj = (xBegin - k) | 0;\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/recurseDeeperStep.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "recurseDeeperStep",
    "memberof": "src/recurseDeeperStep.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/recurseDeeperStep.js~recurseDeeperStep",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/recurseDeeperStep.js",
    "importStyle": "recurseDeeperStep",
    "description": "RecurseDeeper.\n\n/!\\ The entries in this stack should have a value D = MAX that is exactly\nthe distance on the input range [li, lj, ri, rj].",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Int8Array",
          "Int16Array",
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "B",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "StackEntry[]"
        ],
        "spread": false,
        "optional": false,
        "name": "stack",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/twoWay.js",
    "content": "import assert from 'assert';\n\nimport twoWayAlloc from './twoWayAlloc.js';\nimport twoWayScan from './twoWayScan.js';\n\n/**\n * Scan from begin to middle and end to middle.\n *\n * @param {number} MAX\n * @param {Function} eq\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n */\nexport default function twoWay(MAX, eq, li, lj, ri, rj) {\n\tassert(MAX > 0);\n\tassert(MAX <= lj - li + rj - ri);\n\tassert(li < lj);\n\tassert(ri < rj);\n\tassert(!eq(li, ri));\n\tassert(!eq(lj - 1, rj - 1));\n\n\tconst {V, centerF, centerB} = twoWayAlloc(MAX, li, lj, ri, rj);\n\n\treturn twoWayScan(MAX, V, centerF, centerB, eq, li, lj, ri, rj);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/twoWay.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "twoWay",
    "memberof": "src/twoWay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/twoWay.js~twoWay",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/twoWay.js",
    "importStyle": "twoWay",
    "description": "Scan from begin to middle and end to middle.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/twoWayAlloc.js",
    "content": "import assert from 'assert';\n\nimport boundAlloc from './boundAlloc.js';\nimport arrayAlloc from './arrayAlloc.js';\n\n/**\n * TwoWayAlloc.\n *\n * @param {number} MAX\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n */\nexport default function twoWayAlloc(MAX, li, lj, ri, rj) {\n\tconst HALF_MAX = ((MAX >> 1) + (MAX & 1)) | 0; // Ceil(MAX / 2);\n\n\tconst lMAX = boundAlloc(HALF_MAX, li, lj);\n\tconst rMAX = boundAlloc(HALF_MAX, ri, rj);\n\tconst n = (((rMAX + 1) | 0) + lMAX) | 0;\n\tassert(rMAX + 1 < n);\n\n\tconst V = arrayAlloc(lj, n << 1);\n\tV.fill(li, 0, n);\n\tV.fill(lj, n, n << 1);\n\tconst centerF = rMAX;\n\tconst centerB = (n + lMAX) | 0;\n\n\treturn {\n\t\tV,\n\t\tcenterF,\n\t\tcenterB,\n\t};\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/twoWayAlloc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "twoWayAlloc",
    "memberof": "src/twoWayAlloc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/twoWayAlloc.js~twoWayAlloc",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/twoWayAlloc.js",
    "importStyle": "twoWayAlloc",
    "description": "TwoWayAlloc.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"V\": *, \"centerF\": *, \"centerB\": *}"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "src/twoWayRealloc.js",
    "content": "import assert from 'assert';\n\nimport boundAlloc from './boundAlloc.js';\nimport arrayRealloc from './arrayRealloc.js';\n\n/**\n * TwoWayRealloc.\n *\n * @param {Int8Array|Int16Array|Int32Array} B\n * @param {number} MAX\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n */\nexport default function twoWayRealloc(B, MAX, li, lj, ri, rj) {\n\tconst HALF_MAX = ((MAX >> 1) + (MAX & 1)) | 0; // Ceil(MAX / 2);\n\n\tconst lMAX = boundAlloc(HALF_MAX, li, lj);\n\tconst rMAX = boundAlloc(HALF_MAX, ri, rj);\n\tconst n = (((rMAX + 1) | 0) + lMAX) | 0;\n\tassert(rMAX + 1 < n);\n\n\tconst V = arrayRealloc(lj, B);\n\tassert(V.length >= 2 * n);\n\tV.fill(li, 0, n);\n\tV.fill(lj, n, n << 1);\n\tconst centerF = rMAX;\n\tconst centerB = (n + lMAX) | 0;\n\n\treturn {\n\t\tV,\n\t\tcenterF,\n\t\tcenterB,\n\t};\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/twoWayRealloc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "twoWayRealloc",
    "memberof": "src/twoWayRealloc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/twoWayRealloc.js~twoWayRealloc",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/twoWayRealloc.js",
    "importStyle": "twoWayRealloc",
    "description": "TwoWayRealloc.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Int8Array",
          "Int16Array",
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "B",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"V\": *, \"centerF\": *, \"centerB\": *}"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/twoWayScan.js",
    "content": "import assert from 'assert';\n\nimport lBound from './lBound.js';\nimport uBound from './uBound.js';\nimport forwardStep from './forwardStep.js';\nimport forwardExtend from './forwardExtend.js';\nimport backwardStep from './backwardStep.js';\nimport backwardExtend from './backwardExtend.js';\nimport longestCommonPrefix from './longestCommonPrefix.js';\nimport longestCommonSuffix from './longestCommonSuffix.js';\nimport Split from './Split.js';\n\n/**\n * Scan from begin to middle and end to middle.\n *\n * @param {number} MAX\n * @param {{[x: number]: number, length: number}} V\n * @param {number} centerF\n * @param {number} centerB\n * @param {Function} eq\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n * @return {Split}\n */\nexport default function twoWayScan(\n\tMAX,\n\tV,\n\tcenterF,\n\tcenterB,\n\teq,\n\tli,\n\tlj,\n\tri,\n\trj,\n) {\n\tassert(MAX >= 1);\n\tassert(MAX <= lj - li + rj - ri);\n\tassert(li < lj);\n\tassert(ri < rj);\n\tassert(!eq(li, ri));\n\tassert(!eq(lj - 1, rj - 1));\n\n\t// Math.ceil(MAX / 2); triggers deopt lost precision\n\tconst HALF_MAX = ((MAX >> 1) + (MAX & 1)) | 0;\n\tassert(HALF_MAX >= 1);\n\n\tconst Delta0 = (li - ri) | 0;\n\tconst Delta1 = (lj - rj) | 0;\n\tconst Delta = (Delta1 - Delta0) | 0;\n\n\tconst parityDelta = Delta & 1; // Delta % 2 does not work when Delta < 0\n\tassert(parityDelta === 0 || parityDelta === 1);\n\n\tconst DMAX = Math.min(HALF_MAX, (MAX + parityDelta) >> 1);\n\n\tif (DMAX !== 0) {\n\t\tassert(DMAX >= 1);\n\n\t\tif (parityDelta === 0) {\n\t\t\tbackwardStep(V, (centerB - 1) | 0, (centerB + 1) | 0, (centerB - 1) | 0);\n\t\t}\n\n\t\tconst cFmD0 = (centerF - Delta0) | 0;\n\t\tconst cBmD1 = (centerB - Delta1) | 0;\n\t\tconst cBDcF = (cBmD1 - cFmD0) | 0;\n\t\tlet D = 1;\n\t\tlet LBprev = -1;\n\t\tlet UBprev = 1;\n\t\tlet LB = -1;\n\t\tlet UB = 1;\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tassert(2 * D <= MAX + parityDelta);\n\t\t\tassert(LB <= UB);\n\t\t\tassert(LB !== D);\n\t\t\tassert(UB !== -D);\n\t\t\tforwardStep(V, (centerF + LB) | 0, (centerF + UB) | 0, (centerF + D) | 0);\n\t\t\tconst kMin = Math.max(LB, (Delta - ((D - parityDelta) | 0)) | 0);\n\t\t\tassert(kMin >= LB);\n\t\t\tassert((kMin & 1) === (LB & 1));\n\t\t\tconst kMax = Math.min(UB, (Delta + ((D - parityDelta) | 0)) | 0);\n\t\t\tassert(kMax <= UB);\n\t\t\tassert((kMax & 1) === (UB & 1));\n\t\t\tassert((kMin & 1) === (kMax & 1));\n\t\t\tconst cMin = (centerF + kMin) | 0;\n\t\t\tconst cMax = (centerF + kMax) | 0;\n\t\t\tif (cMin <= cMax) {\n\t\t\t\tlet c = cMin;\n\t\t\t\tdo {\n\t\t\t\t\tconst x = V[c];\n\t\t\t\t\t// Const y = x - (c - cFD0); // X - (k + Delta0)\n\t\t\t\t\tV[c] = longestCommonPrefix(\n\t\t\t\t\t\teq,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\tlj,\n\t\t\t\t\t\t(x - ((c - cFmD0) | 0)) | 0,\n\t\t\t\t\t\trj,\n\t\t\t\t\t);\n\t\t\t\t\tif (V[c] === V[(c + cBDcF) | 0]) {\n\t\t\t\t\t\t// XEnd === V[centerB + k - Delta]\n\t\t\t\t\t\treturn new Split(\n\t\t\t\t\t\t\t(c - cFmD0) | 0, // K + Delta0\n\t\t\t\t\t\t\tlongestCommonSuffix(eq, x, li, (x - ((c - cFmD0) | 0)) | 0, ri),\n\t\t\t\t\t\t\tV[c],\n\t\t\t\t\t\t\tD,\n\t\t\t\t\t\t\t((D << 1) - parityDelta) | 0,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tassert(V[c] < V[c + cBDcF]); // WTF???\n\t\t\t\t\tc = (c + 2) | 0;\n\t\t\t\t} while (c <= cMax);\n\n\t\t\t\tif (D === DMAX) break; // This is where we break the loop\n\t\t\t\tforwardExtend((centerF + LB) | 0, (cMin - 2) | 0, cFmD0, V, eq, lj, rj);\n\t\t\t\tforwardExtend((cMax + 2) | 0, (centerF + UB) | 0, cFmD0, V, eq, lj, rj);\n\t\t\t} else {\n\t\t\t\tif (D === DMAX) break; // This is where we break the loop\n\t\t\t\tforwardExtend(\n\t\t\t\t\t(centerF + LB) | 0,\n\t\t\t\t\t(centerF + UB) | 0,\n\t\t\t\t\tcFmD0,\n\t\t\t\t\tV,\n\t\t\t\t\teq,\n\t\t\t\t\tlj,\n\t\t\t\t\trj,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (parityDelta === 0) {\n\t\t\t\tconst LB_ = -UB;\n\t\t\t\tconst UB_ = -LB;\n\t\t\t\tassert(LB_ <= UB_);\n\t\t\t\tassert(LB_ !== D);\n\t\t\t\tassert(UB_ !== -D);\n\t\t\t\tconst cMin = (centerB - UB) | 0;\n\t\t\t\tconst cMax = (centerB - LB) | 0;\n\t\t\t\tbackwardExtend(cMin, cMax, cBmD1, V, eq, li, ri);\n\n\t\t\t\t// LBprev = LB; // No need to update since we do not use them.\n\t\t\t\t// UBprev = UB;\n\t\t\t\tD = (D + 1) | 0;\n\t\t\t\tLB = lBound(D, (rj - ri) | 0); // This is where D is incremented.\n\t\t\t\tUB = uBound(D, (lj - li) | 0);\n\t\t\t\tbackwardStep(\n\t\t\t\t\tV,\n\t\t\t\t\t(centerB - UB) | 0,\n\t\t\t\t\t(centerB - LB) | 0,\n\t\t\t\t\t(centerB - D) | 0,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tassert(parityDelta === 1);\n\t\t\t\tif (D !== 1) {\n\t\t\t\t\tassert(D >= 2);\n\t\t\t\t\tconst LB_ = -UBprev;\n\t\t\t\t\tconst UB_ = -LBprev;\n\t\t\t\t\tassert(LB_ <= UB_);\n\t\t\t\t\tassert(LB_ !== D - 1);\n\t\t\t\t\tassert(UB_ !== -(D - 1));\n\t\t\t\t\tconst cMin = (centerB - UBprev) | 0;\n\t\t\t\t\tconst cMax = (centerB - LBprev) | 0;\n\t\t\t\t\tbackwardExtend(cMin, cMax, cBmD1, V, eq, li, ri);\n\t\t\t\t}\n\n\t\t\t\tbackwardStep(\n\t\t\t\t\tV,\n\t\t\t\t\t(centerB - UB) | 0,\n\t\t\t\t\t(centerB - LB) | 0,\n\t\t\t\t\t(centerB - D) | 0,\n\t\t\t\t);\n\t\t\t\tLBprev = LB;\n\t\t\t\tUBprev = UB;\n\t\t\t\tD = (D + 1) | 0; // This is where D is incremented.\n\t\t\t\tLB = lBound(D, (rj - ri) | 0);\n\t\t\t\tUB = uBound(D, (lj - li) | 0);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn new Split(-1, -1, -1, -1, -1);\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/twoWayScan.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "twoWayScan",
    "memberof": "src/twoWayScan.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/twoWayScan.js~twoWayScan",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/twoWayScan.js",
    "importStyle": "twoWayScan",
    "description": "Scan from begin to middle and end to middle.",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{[x: number]: number, length: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "V",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "centerF",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "centerB",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eq",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Split"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/uBound.js",
    "content": "import assert from 'assert';\n\n/**\n * Computes an upper bound for the signed distance.\n *\n * @param {number} D >= 1\n * @param {number} N >= 1\n * @return {number} A number -D < k <= N.\n */\nexport default function uBound(D, N) {\n\tassert(N >= 1);\n\tassert(D >= 1);\n\tconst k = D <= N ? D | 0 : ((N << 1) - D) | 0;\n\tassert(k <= N);\n\tassert(k > -D);\n\tassert((D & 1) === (k & 1));\n\treturn k;\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/uBound.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "uBound",
    "memberof": "src/uBound.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/uBound.js~uBound",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/uBound.js",
    "importStyle": "uBound",
    "description": "Computes an upper bound for the signed distance.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "D",
        "description": ">= 1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "N",
        "description": ">= 1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "A number -D < k <= N."
    }
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "src/validate32.js",
    "content": "import {ValueError} from '@failure-abstraction/error';\n\n/**\n * Validate input indices.\n *\n * @param {number} MAX\n * @param {number} li\n * @param {number} lj\n * @param {number} ri\n * @param {number} rj\n */\nexport default function validate32(MAX, li, lj, ri, rj) {\n\tif (!Number.isInteger(MAX)) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (MAX < -2147483648) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (MAX > 2147483647) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (!Number.isInteger(li)) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (li < -2147483648) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (li > 2147483647) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (!Number.isInteger(lj)) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (lj < -2147483648) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (lj > 2147483647) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (!Number.isInteger(ri)) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (ri < -2147483648) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (ri > 2147483647) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (!Number.isInteger(rj)) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (rj < -2147483648) {\n\t\tthrow new ValueError();\n\t}\n\n\tif (rj > 2147483647) {\n\t\tthrow new ValueError();\n\t}\n}\n",
    "static": true,
    "longname": "/home/runner/work/myers-1986/myers-1986/src/validate32.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "validate32",
    "memberof": "src/validate32.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validate32.js~validate32",
    "access": "public",
    "export": true,
    "importPath": "@edit-distance/myers-1986/src/validate32.js",
    "importStyle": "validate32",
    "description": "Validate input indices.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MAX",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "li",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ri",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rj",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": ":abacus: [@edit-distance/myers-1986](https://edit-distance.github.io/myers-1986)\n==\n\nReasonably efficient implementation of Eugene W. Myers's exact longest common\nsubsequence and minimum edit-distance algorithm for JavaScript.\nSee [docs](https://edit-distance.github.io/myers-1986/index.html).\n\n> :building_construction: Caveat emptor! This is work in progress. Code may be\n> working. Documentation may be present. Coherence may be. Maybe.\n\n```js\n// Example 1: compute Edit Distance.\n\nimport {makeScan, twoWay} from '@edit-distance/myers-1986';\n\nconst scan = makeScan(twoWay);\n\nconst ed = (x, y) => {\n\tconst eq = (xi, yi) => x[xi] === y[yi];\n\tconst xi = 0;\n\tconst xj = x.length;\n\tconst yi = 0;\n\tconst yj = y.length;\n\tconst MAX = xj - xi + (yj - yi);\n\treturn scan(MAX, eq, xi, xj, yi, yj);\n};\n\ned('BANANA', 'ATANA'); // 3\n\n// Example 2: compute LCS.\n\nimport {diff} from '@edit-distance/myers-1986';\n\nconst rectangles = (x, y) => {\n\tconst eq = (xi, yi) => x[xi] === y[yi];\n\tconst xi = 0;\n\tconst xj = x.length;\n\tconst yi = 0;\n\tconst yj = y.length;\n\tconst MAX = xj - xi + (yj - yi);\n\treturn diff(MAX, eq, xi, xj, yi, yj);\n};\n\nconst lcs = (x, y) => {\n\tlet result = x.slice(0, 0);\n\tlet xp = 0;\n\tfor (const [x0, x1] of rectangles(x, y)) {\n\t\tresult = result.concat(x.slice(xp, x0));\n\t\txp = x1;\n\t}\n\n\treturn result.concat(x.slice(xp, x.length));\n};\n\nlcs('BANANA', 'ATANA'); // AANA\n```\n\n[![License](https://img.shields.io/github/license/edit-distance/myers-1986.svg)](https://raw.githubusercontent.com/edit-distance/myers-1986/main/LICENSE)\n[![Version](https://img.shields.io/npm/v/@edit-distance/myers-1986.svg)](https://www.npmjs.org/package/@edit-distance/myers-1986)\n[![Tests](https://img.shields.io/github/workflow/status/edit-distance/myers-1986/ci:test?event=push&label=tests)](https://github.com/edit-distance/myers-1986/actions/workflows/ci:test.yml?query=branch:main)\n[![Dependencies](https://img.shields.io/david/edit-distance/myers-1986.svg)](https://david-dm.org/edit-distance/myers-1986)\n[![Dev dependencies](https://img.shields.io/david/dev/edit-distance/myers-1986.svg)](https://david-dm.org/edit-distance/myers-1986?type=dev)\n[![GitHub issues](https://img.shields.io/github/issues/edit-distance/myers-1986.svg)](https://github.com/edit-distance/myers-1986/issues)\n[![Downloads](https://img.shields.io/npm/dm/@edit-distance/myers-1986.svg)](https://www.npmjs.org/package/@edit-distance/myers-1986)\n\n[![Code issues](https://img.shields.io/codeclimate/issues/edit-distance/myers-1986.svg)](https://codeclimate.com/github/edit-distance/myers-1986/issues)\n[![Code maintainability](https://img.shields.io/codeclimate/maintainability/edit-distance/myers-1986.svg)](https://codeclimate.com/github/edit-distance/myers-1986/trends/churn)\n[![Code coverage (cov)](https://img.shields.io/codecov/c/gh/edit-distance/myers-1986/main.svg)](https://codecov.io/gh/edit-distance/myers-1986)\n[![Code technical debt](https://img.shields.io/codeclimate/tech-debt/edit-distance/myers-1986.svg)](https://codeclimate.com/github/edit-distance/myers-1986/trends/technical_debt)\n[![Documentation](https://edit-distance.github.io/myers-1986/badge.svg)](https://edit-distance.github.io/myers-1986/source.html)\n[![Package size](https://img.shields.io/bundlephobia/minzip/@edit-distance/myers-1986)](https://bundlephobia.com/result?p=@edit-distance/myers-1986)\n\n## :bicyclist: Benchmark\n\n| input                                               | fast-myers-diff v3.0.1 |  modern.js v0.0.1 |  module.js v0.0.1 |         cjs v0.0.1 |\n| --------------------------------------------------- | ---------------------: | ----------------: | ----------------: | -----------------: |\n| N+M=220 N=100 M=120 LCS=100 DEL=0 INS=20            |      77,170    ops/sec | 99,952    ops/sec | 97,806    ops/sec | 100,333    ops/sec |\n| N+M=220 N=120 M=100 LCS=100 DEL=20 INS=0            |      68,575    ops/sec | 90,582    ops/sec | 89,178    ops/sec |  90,030    ops/sec |\n| N+M=220 N=110 M=110 LCS=100 DEL=10 INS=10           |      63,494    ops/sec | 83,439    ops/sec | 81,201    ops/sec |  82,661    ops/sec |\n| N+M=224 N=14 M=210 LCS=10 DEL=4 INS=200             |       7,112    ops/sec | 10,346    ops/sec | 10,406    ops/sec |  10,898    ops/sec |\n| N+M=20020 N=10000 M=10020 LCS=10000 DEL=0 INS=20    |       3,282    ops/sec |  4,313    ops/sec |  4,174    ops/sec |   4,415    ops/sec |\n| N+M=20020 N=10020 M=10000 LCS=10000 DEL=20 INS=0    |       3,317    ops/sec |  4,040    ops/sec |  4,035    ops/sec |   4,947    ops/sec |\n| N+M=20020 N=10010 M=10010 LCS=10000 DEL=10 INS=10   |       2,414    ops/sec |  2,939    ops/sec |  2,843    ops/sec |   3,009    ops/sec |\n| N+M=220 N=110 M=110 LCS=10 DEL=100 INS=100          |       1,607    ops/sec |  2,737    ops/sec |  2,720    ops/sec |   2,887    ops/sec |\n| N+M=20200 N=10000 M=10200 LCS=10000 DEL=0 INS=200   |         871    ops/sec |  1,258    ops/sec |  1,254    ops/sec |   1,293    ops/sec |\n| N+M=20200 N=10200 M=10000 LCS=10000 DEL=200 INS=0   |         844    ops/sec |  1,240    ops/sec |  1,258    ops/sec |   1,309    ops/sec |\n| N+M=20200 N=10100 M=10100 LCS=10000 DEL=100 INS=100 |         703    ops/sec |    978    ops/sec |    976    ops/sec |     978    ops/sec |\n| N+M=2020 N=1010 M=1010 LCS=10 DEL=1000 INS=1000     |          19.10 ops/sec |     36.35 ops/sec |     36.45 ops/sec |      38.16 ops/sec |\n",
    "longname": "/home/runner/work/myers-1986/myers-1986/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@edit-distance/myers-1986\",\n  \"description\": \"Reasonably efficient and concise exact longest common subsequence and minimum edit-distance algorithm implementation for JavaScript\",\n  \"version\": \"0.0.1\",\n  \"license\": \"AGPL-3.0\",\n  \"author\": \"make-github-pseudonymous-again\",\n  \"homepage\": \"https://edit-distance.github.io/myers-1986\",\n  \"repository\": {\n    \"url\": \"https://github.com/edit-distance/myers-1986\",\n    \"type\": \"git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/edit-distance/myers-1986/issues\"\n  },\n  \"keywords\": [\n    \"Hirschberg\",\n    \"Myers\",\n    \"Ukkonen\",\n    \"common\",\n    \"distance\",\n    \"divide-and-conquer\",\n    \"edit\",\n    \"exact\",\n    \"longest\",\n    \"optimal\",\n    \"string\",\n    \"subsequence\"\n  ],\n  \"sideEffects\": false,\n  \"type\": \"module\",\n  \"source\": \"src/index.js\",\n  \"main\": \"dist/index.cjs\",\n  \"module\": \"dist/index.module.js\",\n  \"esmodule\": \"dist/index.modern.js\",\n  \"umd:main\": \"dist/index.umd.js\",\n  \"unpkg\": \"dist/index.umd.js\",\n  \"exports\": {\n    \".\": {\n      \"browser\": \"./dist/index.module.js\",\n      \"umd\": \"./dist/index.umd.js\",\n      \"require\": \"./dist/index.cjs\",\n      \"default\": \"./dist/index.modern.js\"\n    }\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"build\": \"NODE_ENV=production microbundle\",\n    \"build-docs\": \"esdoc\",\n    \"build-gh-pages\": \"npm run build-docs\",\n    \"ci:test\": \"npm run lint-config && npm run lint && npm run cover -- -- --tap | tap-dot\",\n    \"commit-msg\": \"commitlint --edit\",\n    \"cover\": \"NODE_ENV=cover c8 --all --src src --reporter lcov --reporter text-summary --reporter text npm test\",\n    \"debug\": \"NODE_ENV=debug npm run test -- -st --fail-fast\",\n    \"dev\": \"npm run lint-config-and-fix && npm run lint-and-fix && npm run cover -- -- -st --fail-fast\",\n    \"install-hooks\": \"husky install\",\n    \"lint\": \"xo\",\n    \"lint-and-fix\": \"npm run lint -- --fix\",\n    \"lint-config\": \"fixpack --dryRun\",\n    \"lint-config-and-fix\": \"fixpack || fixpack\",\n    \"postinstall\": \"npm run install-hooks\",\n    \"postpublish\": \"pinst --enable\",\n    \"precommit\": \"lint-staged\",\n    \"prepare\": \"npm run build\",\n    \"prepublishOnly\": \"pinst --disable\",\n    \"release\": \"np --message ':hatching_chick: release: Bumping to v%s.'\",\n    \"test\": \"ava\"\n  },\n  \"dependencies\": {\n    \"@failure-abstraction/error\": \"^6.0.1\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"7.14.6\",\n    \"@babel/preset-env\": \"7.14.7\",\n    \"@babel/register\": \"7.14.5\",\n    \"@commitlint/cli\": \"12.1.4\",\n    \"@iterable-iterator/chain\": \"1.0.0\",\n    \"@iterable-iterator/iter\": \"1.0.0\",\n    \"@iterable-iterator/list\": \"1.0.0\",\n    \"@iterable-iterator/map\": \"1.0.0\",\n    \"@iterable-iterator/next\": \"2.0.0\",\n    \"@iterable-iterator/reduce\": \"1.0.0\",\n    \"@js-library/commitlint-config\": \"0.0.4\",\n    \"@node-loader/babel\": \"1.0.0\",\n    \"ava\": \"4.0.0-alpha.2\",\n    \"babel-plugin-transform-remove-console\": \"6.9.4\",\n    \"babel-plugin-unassert\": \"3.1.0\",\n    \"babel-preset-power-assert\": \"3.0.0\",\n    \"c8\": \"7.7.3\",\n    \"esdoc\": \"1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"1.0.0\",\n    \"esdoc-inject-script-plugin\": \"1.0.0\",\n    \"esdoc-inject-style-plugin\": \"1.0.0\",\n    \"esdoc-standard-plugin\": \"1.0.0\",\n    \"fixpack\": \"4.0.0\",\n    \"husky\": \"6.0.0\",\n    \"lint-staged\": \"11.0.0\",\n    \"microbundle\": \"0.13.1\",\n    \"np\": \"7.5.0\",\n    \"pinst\": \"2.1.6\",\n    \"power-assert\": \"1.6.1\",\n    \"seedrandom\": \"3.0.5\",\n    \"tap-dot\": \"2.0.0\",\n    \"xo\": \"0.39.1\"\n  },\n  \"ava\": {\n    \"files\": [\n      \"test/src/**/*\"\n    ],\n    \"nodeArguments\": [\n      \"--experimental-loader=@node-loader/babel\"\n    ],\n    \"timeout\": \"1m\"\n  },\n  \"babel\": {\n    \"sourceMaps\": true,\n    \"presets\": [\n      [\n        \"@babel/preset-env\",\n        {\n          \"bugfixes\": true,\n          \"modules\": false,\n          \"targets\": {\n            \"esmodules\": true\n          }\n        }\n      ]\n    ],\n    \"plugins\": [\n      [\n        \"transform-remove-console\",\n        {\n          \"exclude\": [\n            \"log\",\n            \"error\",\n            \"warn\"\n          ]\n        }\n      ]\n    ],\n    \"env\": {\n      \"debug\": {\n        \"presets\": [\n          \"babel-preset-power-assert\"\n        ],\n        \"plugins\": [\n          [\n            \"transform-remove-console\",\n            {\n              \"exclude\": [\n                \"debug\",\n                \"log\",\n                \"error\",\n                \"warn\"\n              ]\n            }\n          ]\n        ]\n      },\n      \"test\": {\n        \"presets\": [\n          \"babel-preset-power-assert\"\n        ]\n      },\n      \"cover\": {\n        \"sourceMaps\": \"both\",\n        \"presets\": [\n          \"babel-preset-power-assert\"\n        ]\n      },\n      \"development\": {\n        \"presets\": [\n          [\n            \"@babel/preset-env\",\n            {\n              \"targets\": [\n                \"defaults\",\n                \"maintained node versions\"\n              ]\n            }\n          ],\n          \"babel-preset-power-assert\"\n        ]\n      },\n      \"production\": {\n        \"presets\": [\n          [\n            \"@babel/preset-env\",\n            {\n              \"targets\": [\n                \"defaults\",\n                \"maintained node versions\"\n              ]\n            }\n          ]\n        ],\n        \"plugins\": [\n          \"babel-plugin-unassert\"\n        ]\n      }\n    }\n  },\n  \"lint-staged\": {\n    \"!(_benchmark/*|_profile/*).js\": [\n      \"npm run lint-and-fix\"\n    ],\n    \"package.json\": [\n      \"npm run lint-config-and-fix\"\n    ]\n  },\n  \"prettier\": {\n    \"trailingComma\": \"all\"\n  },\n  \"xo\": {\n    \"prettier\": true,\n    \"plugins\": [\n      \"unicorn\"\n    ],\n    \"ignores\": [\n      \"_benchmark/**\",\n      \"_profile/**\"\n    ],\n    \"rules\": {\n      \"unicorn/filename-case\": [\n        \"error\",\n        {\n          \"cases\": {\n            \"camelCase\": true,\n            \"pascalCase\": true\n          }\n        }\n      ]\n    },\n    \"overrides\": [\n      {\n        \"files\": [\n          \"src/**\"\n        ],\n        \"rules\": {\n          \"unicorn/prefer-math-trunc\": \"off\"\n        }\n      },\n      {\n        \"files\": [\n          \"doc/**\"\n        ],\n        \"env\": \"browser\"\n      }\n    ]\n  }\n}\n",
    "longname": "/home/runner/work/myers-1986/myers-1986/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/myers-1986/myers-1986/doc/manual/overview.md",
    "name": "./doc/manual/overview.md",
    "content": "# Overview\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/myers-1986/myers-1986/doc/manual/installation.md",
    "name": "./doc/manual/installation.md",
    "content": "# Installation\n\nCan be managed using\n[yarn](https://yarnpkg.com/en/docs),\n[npm](https://docs.npmjs.com),\nor [jspm](https://jspm.org/docs).\n\n\n### yarn\n```terminal\nyarn add @edit-distance/myers-1986\n```\n\n### npm\n```terminal\nnpm install @edit-distance/myers-1986 --save\n```\n\n### jspm\n```terminal\njspm install npm:@edit-distance/myers-1986\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/myers-1986/myers-1986/doc/manual/usage.md",
    "name": "./doc/manual/usage.md",
    "content": "# Usage\n\nImport the library where needed\n```js\nconst {diff} = require( '@edit-distance/myers-1986' ) ;\n// or\nimport {diff} from '@edit-distance/myers-1986' ;\n```\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/runner/work/myers-1986/myers-1986/doc/manual/example.md",
    "name": "./doc/manual/example.md",
    "content": "# Examples\n\n> More examples in [the test files](https://github.com/edit-distance/myers-1986/tree/main/test/src).\n",
    "static": true,
    "access": "public"
  }
]